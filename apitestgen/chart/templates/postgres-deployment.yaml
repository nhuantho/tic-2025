{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tic-2025.fullname" . }}-postgres
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "tic-2025.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "tic-2025.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "tic-2025.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      {{- if .Values.postgresql.persistence.enabled }}
      initContainers:
        - name: init-postgres
          image: busybox:1.35
          command: ['sh', '-c', 'rm -rf /var/lib/postgresql/data/* && echo "PostgreSQL data directory cleaned"']
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      {{- end }}
      containers:
        - name: postgres
          image: {{ .Values.postgresql.image }}
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.env.POSTGRES_DB | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.env.POSTGRES_USER | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.env.POSTGRES_PASSWORD | quote }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          {{- if .Values.postgresql.resources }}
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}
          {{- end }}
      volumes:
        - name: postgres-data
          {{- if .Values.postgresql.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "tic-2025.fullname" . }}-postgres-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- end }} 